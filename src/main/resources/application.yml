server:
  port: 9100
  servlet:
    context-path: /auth-service

authorization:
  server:
    issuer: "http://localhost:9100/auth-service"

jwt:
  private-key: private_key.pem
  public-key: public_key.pem
  expiration-seconds: 3600
  refresh-expiration-seconds: 86400

spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: https://auth.swc.iot
  config:
    import: optional:file:/etc/config/authdb_creds.yml,optional:file:C:/config/authdb_creds.yml
  datasource:
    url: jdbc:postgresql://localhost:5432/auth-db
    username: ${db.username}
    password: ${db.password}
    hikari:
      maximum-pool-size: 3
      minimum-idle: 1
      pool-name: hot-pool
      auto-commit: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  redis:
    host: localhost
    port: 6379
    timeout: 5000ms
    password: ${redis.password}

logging:
  level:
    org.springframework: INFO
    com.swc: DEBUG
    org.springframework.data.redis: DEBUG